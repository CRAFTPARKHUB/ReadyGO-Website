// Generated by Framer (ce6e1ae)
import {
    addPropertyControls as e,
    ControlType as t,
    QueryCache as l,
    QueryEngine as i
} from "framer";
import {
    DatabaseCollection as a
} from "./kIdBeNkGa-0.js";
import {
    resolveRichText as r
} from "./kIdBeNkGa-1.js";
import {
    resolveRichTextCz as n
} from "./kIdBeNkGa-3.js";
let o = {
        chHNEjoGI: {
            isNullable: !0,
            type: t.String
        },
        DdSWNQ_28: {
            isNullable: !0,
            type: t.ResponsiveImage
        },
        gx1tkRJPL: {
            isNullable: !0,
            type: t.String
        },
        id: {
            isNullable: !1,
            type: t.String
        },
        LnHlDW2gi: {
            isNullable: !0,
            type: t.Date
        },
        nextItemId: {
            isNullable: !0,
            type: t.String
        },
        oiKjwKSrv: {
            isNullable: !0,
            type: t.RichText
        },
        previousItemId: {
            isNullable: !0,
            type: t.String
        },
        sB822SU_F: {
            isNullable: !0,
            type: t.String
        },
        WYlfdhfHK: {
            isNullable: !0,
            type: t.String
        }
    },
    u = [],
    d = e => {
        let t = u[e];
        if (t) return t().then(e => e.default);
    },
    p = new i,
    s = new l(p),
    m = {
        collectionByLocaleId: {
            default: new a({
                chunks: [new URL("./kIdBeNkGa-chunk-default-0.framercms",
                    import.meta.url).href.replace("/modules/", "/cms/")],
                indexes: [],
                resolveRichText: r,
                resolveVectorSetItem: d,
                schema: o
            }),
            TeF2PH4jk: new a({
                chunks: [new URL("./kIdBeNkGa-chunk-TeF2PH4jk-0.framercms",
                    import.meta.url).href.replace("/modules/", "/cms/")],
                indexes: [],
                resolveRichText: n,
                resolveVectorSetItem: d,
                schema: o
            })
        },
        displayName: "Blog"
    };
export default m;
e(m, {
    chHNEjoGI: {
        defaultValue: "",
        title: "Subtitle",
        type: t.String
    },
    sB822SU_F: {
        defaultValue: "",
        title: "Title",
        type: t.String
    },
    gx1tkRJPL: {
        title: "Slug",
        type: t.String
    },
    LnHlDW2gi: {
        defaultValue: "",
        title: "Date",
        type: t.Date
    },
    WYlfdhfHK: {
        defaultValue: "Highnote Team",
        title: "Author",
        type: t.String
    },
    DdSWNQ_28: {
        title: "Image",
        type: t.ResponsiveImage
    },
    oiKjwKSrv: {
        defaultValue: "",
        title: "Content",
        type: t.RichText
    },
    previousItemId: {
        dataIdentifier: "local-module:collection/kIdBeNkGa:default",
        title: "Previous",
        type: t.CollectionReference
    },
    nextItemId: {
        dataIdentifier: "local-module:collection/kIdBeNkGa:default",
        title: "Next",
        type: t.CollectionReference
    }
});
export const enumToDisplayNameFunctions = {};
export const utils = {
    async getSlugByRecordId(e, t) {
        let [l] = await s.get({
            from: {
                data: m,
                type: "Collection"
            },
            limit: {
                type: "LiteralValue",
                value: 1
            },
            select: [{
                name: "gx1tkRJPL",
                type: "Identifier"
            }],
            where: {
                left: {
                    name: "id",
                    type: "Identifier"
                },
                operator: "==",
                right: {
                    type: "LiteralValue",
                    value: e
                },
                type: "BinaryOperation"
            }
        }, t).readAsync();
        return l ? .gx1tkRJPL;
    },
    async getRecordIdBySlug(e, t) {
        let [l] = await s.get({
            from: {
                data: m,
                type: "Collection"
            },
            limit: {
                type: "LiteralValue",
                value: 1
            },
            select: [{
                name: "id",
                type: "Identifier"
            }],
            where: {
                left: {
                    name: "gx1tkRJPL",
                    type: "Identifier"
                },
                operator: "==",
                right: {
                    type: "LiteralValue",
                    value: e
                },
                type: "BinaryOperation"
            }
        }, t).readAsync();
        return l ? .id;
    }
};
export const __FramerMetadata__ = {
    "exports": {
        "utils": {
            "type": "variable",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "enumToDisplayNameFunctions": {
            "type": "variable",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "default": {
            "type": "data",
            "name": "data",
            "annotations": {
                "framerContractVersion": "1",
                "framerData": "",
                "framerSlug": "gx1tkRJPL",
                "framerCollectionUtils": "1",
                "framerRecordIdKey": "id",
                "framerCollectionId": "kIdBeNkGa",
                "framerAutoSizeImages": "true",
                "framerColorSyntax": "false",
                "framerEnumToDisplayNameUtils": "2"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}