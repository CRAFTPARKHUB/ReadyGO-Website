// Generated by Framer (c85c929)

import { addFonts, addPropertyControls, ControlType, cx, getFontsFromSharedStyle, Instance, RichText, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import Icon from "https://framerusercontent.com/modules/QGsiOmymnPflDqXQHBDF/7ieEdtPrCagk41eLw1dF/VWXKKteE7.js";
import * as sharedStyle2 from "../css/OvgFe4dMx";
import * as sharedStyle1 from "../css/ozhLrZjZv";
import * as sharedStyle from "../css/xhIf5qL2n";

const cycleOrder = ["edSWaFiyn", "DcA0EGVwK"];

const serializationHash = "framer-cfriu"

const variantClassNames = {DcA0EGVwK: "framer-v-1qymzcr", edSWaFiyn: "framer-v-105ryf8"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const humanReadableVariantMap = {Phone: "DcA0EGVwK", Primary: "edSWaFiyn"}

const getProps = ({height, icon, id, text, title, width, ...props}) => { return {...props, dzkXFg9uV: text ?? props.dzkXFg9uV ?? "Comment, assign, and edit tasks live with your team.", FaEZ0DeiK: icon ?? props.FaEZ0DeiK ?? Icon, fothkKm_j: title ?? props.fothkKm_j ?? "Real-Time Collaboration", variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "edSWaFiyn"} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;variant?: keyof typeof humanReadableVariantMap;title?: string;text?: string;icon?: React.ComponentType<any> | undefined; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const { style, className, layoutId, variant, fothkKm_j, dzkXFg9uV, FaEZ0DeiK, ...restProps } = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({cycleOrder, defaultVariant: "edSWaFiyn", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = [sharedStyle.className, sharedStyle1.className, sharedStyle2.className]

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-105ryf8", className, classNames)} data-border data-framer-name={"Primary"} layoutDependency={layoutDependency} layoutId={"edSWaFiyn"} ref={refBinding} style={{"--border-bottom-width": "1px", "--border-color": "var(--token-64e377a5-0d6a-419d-892d-eb08deb7230b, rgb(229, 229, 232))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", backgroundColor: "var(--token-e1c52d29-6b20-4ee3-afb3-f179ac191e9c, rgb(251, 251, 251))", borderBottomLeftRadius: 10, borderBottomRightRadius: 10, borderTopLeftRadius: 10, borderTopRightRadius: 10, boxShadow: "0px 2px 5px 0px var(--token-e1c52d29-6b20-4ee3-afb3-f179ac191e9c, rgb(251, 251, 251))", ...style}} {...addPropertyOverrides({DcA0EGVwK: {"data-framer-name": "Phone"}}, baseVariant, gestureVariant)}><motion.div className={"framer-pzkzdi"} data-framer-name={"Container"} layoutDependency={layoutDependency} layoutId={"kQ0DKoj1L"}><motion.div className={"framer-sggv0w"} data-framer-name={"Icon"} layoutDependency={layoutDependency} layoutId={"aqycaB56F"} style={{borderBottomLeftRadius: 5, borderBottomRightRadius: 5, borderTopLeftRadius: 5, borderTopRightRadius: 5}}><Instance animated className={"framer-n7pu38"} Component={FaEZ0DeiK} layoutDependency={layoutDependency} layoutId={"ad9_HLTzf"} style={{"--21h8s6": "var(--token-d602a9d1-da3b-45d6-b039-eac0d7c79341, rgb(66, 135, 255))"}}/></motion.div><motion.div className={"framer-1435lxg"} data-framer-name={"Heading & Supporting Text"} layoutDependency={layoutDependency} layoutId={"Ow6ONxs49"}><RichText __fromCanvasComponent children={<React.Fragment><motion.h6 className={"framer-styles-preset-ggytww"} data-styles-preset={"xhIf5qL2n"}>Real-Time Collaboration</motion.h6></React.Fragment>} className={"framer-hea51t"} fonts={["Inter"]} layoutDependency={layoutDependency} layoutId={"y2VvDQ7Vx"} style={{"--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline"}} text={fothkKm_j} variants={{DcA0EGVwK: {"--extracted-1w1cjl5": "var(--token-d3c732bc-55cf-476f-8dd2-e130b23f6381, rgb(0, 0, 0))"}}} verticalAlignment={"top"} withExternalLayout {...addPropertyOverrides({DcA0EGVwK: {children: <React.Fragment><motion.h6 className={"framer-styles-preset-rlw5rm"} data-styles-preset={"ozhLrZjZv"} style={{"--framer-text-alignment": "left", "--framer-text-color": "var(--extracted-1w1cjl5, var(--token-d3c732bc-55cf-476f-8dd2-e130b23f6381, rgb(0, 0, 0)))"}}>Real-Time Collaboration</motion.h6></React.Fragment>}}, baseVariant, gestureVariant)}/><RichText __fromCanvasComponent children={<React.Fragment><motion.p className={"framer-styles-preset-wct5n4"} data-styles-preset={"OvgFe4dMx"} style={{"--framer-text-alignment": "left"}}>Comment, assign, and edit tasks live with your team.</motion.p></React.Fragment>} className={"framer-yd03ol"} fonts={["Inter"]} layoutDependency={layoutDependency} layoutId={"KpyuDVBa7"} style={{"--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline"}} text={dzkXFg9uV} verticalAlignment={"top"} withExternalLayout/></motion.div></motion.div></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-cfriu.framer-15zks4z, .framer-cfriu .framer-15zks4z { display: block; }", ".framer-cfriu.framer-105ryf8 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 25px; position: relative; width: 469px; will-change: var(--framer-will-change-override, transform); }", ".framer-cfriu .framer-pzkzdi { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 25px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }", ".framer-cfriu .framer-sggv0w { align-content: center; align-items: center; aspect-ratio: 1 / 1; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: var(--framer-aspect-ratio-supported, 30px); justify-content: center; overflow: visible; padding: 0px; position: relative; width: 30px; }", ".framer-cfriu .framer-n7pu38 { flex: none; height: var(--framer-aspect-ratio-supported, 30px); left: 0px; position: absolute; right: 0px; top: 0px; width: calc(100% - 0px); z-index: 0; }", ".framer-cfriu .framer-1435lxg { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 1px; }", ".framer-cfriu .framer-hea51t, .framer-cfriu .framer-yd03ol { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }", ".framer-cfriu.framer-v-1qymzcr.framer-105ryf8 { padding: 20px; }", ".framer-cfriu.framer-v-1qymzcr .framer-pzkzdi { gap: 20px; }", ...sharedStyle.css, ...sharedStyle1.css, ...sharedStyle2.css, ".framer-cfriu[data-border=\"true\"]::after, .framer-cfriu [data-border=\"true\"]::after { content: \"\"; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 126.5
 * @framerIntrinsicWidth 468.5
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]},"DcA0EGVwK":{"layout":["fixed","auto"]}}}
 * @framerVariables {"fothkKm_j":"title","dzkXFg9uV":"text","FaEZ0DeiK":"icon"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 * @framerVectorSets ["omX0gWFPqDwhaiWwf6ab"]
 */
const FramerUk28eqYDO: React.ComponentType<Props> = withCSS(Component, css, "framer-cfriu") as typeof Component;
export default FramerUk28eqYDO;

FramerUk28eqYDO.displayName = "Highlight Card";

FramerUk28eqYDO.defaultProps = {height: 126.5, width: 468.5};

addPropertyControls(FramerUk28eqYDO, {variant: {options: ["edSWaFiyn", "DcA0EGVwK"], optionTitles: ["Primary", "Phone"], title: "Variant", type: ControlType.Enum}, fothkKm_j: {defaultValue: "Real-Time Collaboration", displayTextArea: false, title: "Title", type: ControlType.String}, dzkXFg9uV: {defaultValue: "Comment, assign, and edit tasks live with your team.", displayTextArea: false, title: "Text", type: ControlType.String}, FaEZ0DeiK: {defaultValue: {identifier: "module:QGsiOmymnPflDqXQHBDF/7ieEdtPrCagk41eLw1dF/VWXKKteE7.js:default", moduleId: "QGsiOmymnPflDqXQHBDF"}, setModuleId: "omX0gWFPqDwhaiWwf6ab", title: "Icon", type: ControlType.VectorSetItem}} as any)

addFonts(FramerUk28eqYDO, [{explicitInter: true, fonts: [{family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400"}]}, ...getFontsFromSharedStyle(sharedStyle.fonts), ...getFontsFromSharedStyle(sharedStyle1.fonts), ...getFontsFromSharedStyle(sharedStyle2.fonts)], {supportsExplicitInterCodegen: true})