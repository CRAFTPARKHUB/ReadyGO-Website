// Generated by Framer (570e25b)
import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    getFonts,
    getFontsFromSharedStyle,
    RichText,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
import Check from "https://framerusercontent.com/modules/RvM91VtLIONQCDM2DB6b/hKeTkWbMIpJUeTHgnOG9/rXHCePIVl.js";
import * as sharedStyle from "https://framerusercontent.com/modules/4AgsUj8M4cU5xdkJd6F0/ePSITNvvWIiML1i7Q0Ln/OvgFe4dMx.js";
const CheckFonts = getFonts(Check);
const cycleOrder = ["KY212mU4T", "H1hUm4v7q"];
const serializationHash = "framer-ZwGvg";
const variantClassNames = {
    H1hUm4v7q: "framer-v-1w6uadn",
    KY212mU4T: "framer-v-1611rx"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    bounce: .2,
    delay: 0,
    duration: .4,
    type: "spring"
};
const transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`;
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
    "Check Items - Blue": "KY212mU4T",
    "Check Items - Grey": "H1hUm4v7q"
};
const getProps = ({
    content,
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        iodpfCerq: content ? ? props.iodpfCerq ? ? "Access to 10+ blockchain networks",
        variant: humanReadableVariantMap[props.variant] ? ? props.variant ? ? "KY212mU4T"
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        iodpfCerq,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        cycleOrder,
        defaultVariant: "KY212mU4T",
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const sharedStyleClassNames = [sharedStyle.className];
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsxs(motion.div, { ...restProps,
                    ...gestureHandlers,
                    className: cx(scopingClassNames, "framer-1611rx", className, classNames),
                    "data-framer-name": "Check Items - Blue",
                    layoutDependency: layoutDependency,
                    layoutId: "KY212mU4T",
                    ref: refBinding,
                    style: { ...style
                    },
                    ...addPropertyOverrides({
                        H1hUm4v7q: {
                            "data-framer-name": "Check Items - Grey"
                        }
                    }, baseVariant, gestureVariant),
                    children: [ /*#__PURE__*/ _jsx(motion.div, {
                        className: "framer-asyw4f",
                        "data-framer-name": "Icon-holder",
                        layoutDependency: layoutDependency,
                        layoutId: "XcWy_6gzT",
                        style: {
                            backgroundColor: "var(--token-e463222a-c3ec-4920-8338-555ca22c2bd5, rgba(10, 141, 255, 0.07))",
                            borderBottomLeftRadius: 13,
                            borderBottomRightRadius: 13,
                            borderTopLeftRadius: 13,
                            borderTopRightRadius: 13
                        },
                        variants: {
                            H1hUm4v7q: {
                                backgroundColor: "rgba(0, 0, 0, 0)"
                            }
                        },
                        children: /*#__PURE__*/ _jsx(Check, {
                            animated: true,
                            className: "framer-ya60st",
                            layoutDependency: layoutDependency,
                            layoutId: "vapfW3XwE",
                            style: {
                                "--1m6trwb": 0,
                                "--21h8s6": "var(--token-d602a9d1-da3b-45d6-b039-eac0d7c79341, rgb(0, 94, 255))",
                                "--pgex8v": 2
                            },
                            transformTemplate: transformTemplate1,
                            variants: {
                                H1hUm4v7q: {
                                    "--21h8s6": "var(--token-52749bb0-1899-4563-80ac-ac8a27c04772, rgb(145, 145, 145))"
                                }
                            }
                        })
                    }), /*#__PURE__*/ _jsx(motion.div, {
                        className: "framer-1nyf64z",
                        "data-framer-name": "Text wrap",
                        layoutDependency: layoutDependency,
                        layoutId: "Mob0DDhx8",
                        children: /*#__PURE__*/ _jsx(RichText, {
                            __fromCanvasComponent: true,
                            children: /*#__PURE__*/ _jsx(React.Fragment, {
                                children: /*#__PURE__*/ _jsx(motion.p, {
                                    className: "framer-styles-preset-wct5n4",
                                    "data-styles-preset": "OvgFe4dMx",
                                    style: {
                                        "--framer-text-alignment": "left",
                                        "--framer-text-color": "var(--extracted-r6o4lv, var(--token-d3c732bc-55cf-476f-8dd2-e130b23f6381, rgb(38, 38, 38)))"
                                    },
                                    children: "Access to 10+ blockchain networks"
                                })
                            }),
                            className: "framer-8f7891",
                            "data-framer-name": "Text",
                            fonts: ["Inter"],
                            layoutDependency: layoutDependency,
                            layoutId: "Nl1Jou3P9",
                            style: {
                                "--extracted-r6o4lv": "var(--token-d3c732bc-55cf-476f-8dd2-e130b23f6381, rgb(38, 38, 38))"
                            },
                            text: iodpfCerq,
                            verticalAlignment: "top",
                            withExternalLayout: true
                        })
                    })]
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-ZwGvg.framer-160p6yb, .framer-ZwGvg .framer-160p6yb { display: block; }", ".framer-ZwGvg.framer-1611rx { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: min-content; }", ".framer-ZwGvg .framer-asyw4f { aspect-ratio: 1 / 1; flex: none; gap: 0px; height: var(--framer-aspect-ratio-supported, 26px); overflow: hidden; position: relative; width: 26px; will-change: var(--framer-will-change-override, transform); }", ".framer-ZwGvg .framer-ya60st { flex: none; height: var(--framer-aspect-ratio-supported, 18px); left: 50%; position: absolute; top: 50%; width: 18px; }", ".framer-ZwGvg .framer-1nyf64z { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: 274px; }", ".framer-ZwGvg .framer-8f7891 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }", ".framer-ZwGvg.framer-v-1w6uadn.framer-1611rx { gap: 8px; }", ".framer-ZwGvg.framer-v-1w6uadn .framer-ya60st { height: var(--framer-aspect-ratio-supported, 19px); width: 20px; }", ...sharedStyle.css];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 26
 * @framerIntrinsicWidth 310
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"H1hUm4v7q":{"layout":["auto","auto"]}}}
 * @framerVariables {"iodpfCerq":"content"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerdAMXiUiHX = withCSS(Component, css, "framer-ZwGvg");
export default FramerdAMXiUiHX;
FramerdAMXiUiHX.displayName = "Pricing Plan Iist";
FramerdAMXiUiHX.defaultProps = {
    height: 26,
    width: 310
};
addPropertyControls(FramerdAMXiUiHX, {
    variant: {
        options: ["KY212mU4T", "H1hUm4v7q"],
        optionTitles: ["Check Items - Blue", "Check Items - Grey"],
        title: "Variant",
        type: ControlType.Enum
    },
    iodpfCerq: {
        defaultValue: "Access to 10+ blockchain networks",
        displayTextArea: false,
        title: "Content",
        type: ControlType.String
    }
});
addFonts(FramerdAMXiUiHX, [{
    explicitInter: true,
    fonts: [{
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
        url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
        url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+1F00-1FFF",
        url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0370-03FF",
        url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
        url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
        url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
        url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
        weight: "400"
    }]
}, ...CheckFonts, ...getFontsFromSharedStyle(sharedStyle.fonts)], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "default": {
            "type": "reactComponent",
            "name": "FramerdAMXiUiHX",
            "slots": [],
            "annotations": {
                "framerIntrinsicHeight": "26",
                "framerIntrinsicWidth": "310",
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"auto\",\"auto\"]},\"H1hUm4v7q\":{\"layout\":[\"auto\",\"auto\"]}}}",
                "framerContractVersion": "1",
                "framerComponentViewportWidth": "true",
                "framerColorSyntax": "true",
                "framerAutoSizeImages": "true",
                "framerVariables": "{\"iodpfCerq\":\"content\"}",
                "framerImmutableVariables": "true",
                "framerDisplayContentsDiv": "false"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}
//# sourceMappingURL=./dAMXiUiHX.map