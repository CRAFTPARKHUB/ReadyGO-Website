// Generated by Framer (ac3cb42)
import {
    jsx as _jsx
} from "react/jsx-runtime";
import {
    addPropertyControls,
    ControlType,
    cx,
    motion,
    withCSS
} from "framer";
import * as React from "react";
import {
    forwardRef
} from "react";
const SVG = /*#__PURE__*/ forwardRef((props, ref) => {
    const {
        animated,
        layoutId,
        children,
        ...rest
    } = props;
    return animated ? /*#__PURE__*/ _jsx(motion.div, { ...rest,
        layoutId: layoutId,
        ref: ref
    }) : /*#__PURE__*/ _jsx("div", { ...rest,
        ref: ref
    });
});
const getProps = ({
    fill,
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        ezTt3ayMo: fill ? ? props.ezTt3ayMo ? ? "rgb(0, 0, 0)"
    };
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const {
        style,
        className,
        layoutId,
        variant,
        ezTt3ayMo,
        ...restProps
    } = getProps(props);
    return /*#__PURE__*/ _jsx(SVG, { ...restProps,
        className: cx("framer-uxCXZ", className),
        layoutId: layoutId,
        ref: ref,
        style: {
            "--21h8s6": ezTt3ayMo,
            ...style
        }
    });
});
const css = ['.framer-uxCXZ { aspect-ratio: 1; background-color: var(--21h8s6); mask-image: url(\'data:image/svg+xml,<svg aria-label="Tree Structure" display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 14.25 7.5 L 18.75 7.5 C 19.578 7.5 20.25 6.828 20.25 6 L 20.25 1.5 C 20.25 0.672 19.578 0 18.75 0 L 14.25 0 C 13.422 0 12.75 0.672 12.75 1.5 L 12.75 3 L 11.25 3 C 10.007 3 9 4.007 9 5.25 L 9 8.25 L 6 8.25 L 6 7.5 C 6 6.672 5.328 6 4.5 6 L 1.5 6 C 0.672 6 0 6.672 0 7.5 L 0 10.5 C 0 11.328 0.672 12 1.5 12 L 4.5 12 C 5.328 12 6 11.328 6 10.5 L 6 9.75 L 9 9.75 L 9 12.75 C 9 13.993 10.007 15 11.25 15 L 12.75 15 L 12.75 16.5 C 12.75 17.328 13.422 18 14.25 18 L 18.75 18 C 19.578 18 20.25 17.328 20.25 16.5 L 20.25 12 C 20.25 11.172 19.578 10.5 18.75 10.5 L 14.25 10.5 C 13.422 10.5 12.75 11.172 12.75 12 L 12.75 13.5 L 11.25 13.5 C 10.836 13.5 10.5 13.164 10.5 12.75 L 10.5 5.25 C 10.5 4.836 10.836 4.5 11.25 4.5 L 12.75 4.5 L 12.75 6 C 12.75 6.828 13.422 7.5 14.25 7.5 Z M 4.5 10.5 L 1.5 10.5 L 1.5 7.5 L 4.5 7.5 Z M 14.25 12 L 18.75 12 L 18.75 16.5 L 14.25 16.5 Z M 14.25 1.5 L 18.75 1.5 L 18.75 6 L 14.25 6 Z" fill="var(--21h8s6, rgb(0,0,0))" height="18px" id="vFv4NUPci" opacity="1" transform="translate(0.75 3)" width="20.25px"/></svg>\'); mask-position: center; mask-repeat: no-repeat; width: 24px; }'];
/**
 * This is a generated Framer component.
 * @framerIntrinsicWidth 24
 * @framerIntrinsicHeight 24
 * @framerSupportedLayoutWidth any-prefer-fixed
 * @framerSupportedLayoutHeight any-prefer-fixed
 * @framerVariables {"ezTt3ayMo":"fill"}
 * @framerImmutableVariables true
 * @framerVector {"name":"Tree Structure","color":{"type":"variable","value":"21h8s6"},"set":{"localId":"vectorSet/NGVKdicsm","id":"NGVKdicsm","moduleId":"omX0gWFPqDwhaiWwf6ab"}}
 * @framerDisableUnlink true
 */
const Icon = withCSS(Component, css, "framer-uxCXZ");
export default Icon;
addPropertyControls(Icon, {
    ezTt3ayMo: {
        defaultValue: "rgb(0, 0, 0)",
        hidden: false,
        title: "Fill",
        type: ControlType.Color
    }
});
export const __FramerMetadata__ = {
    "exports": {
        "default": {
            "type": "reactComponent",
            "name": "Icon",
            "slots": [],
            "annotations": {
                "framerVector": "{\"name\":\"Tree Structure\",\"color\":{\"type\":\"variable\",\"value\":\"21h8s6\"},\"set\":{\"localId\":\"vectorSet/NGVKdicsm\",\"id\":\"NGVKdicsm\",\"moduleId\":\"omX0gWFPqDwhaiWwf6ab\"}}",
                "framerIntrinsicHeight": "24",
                "framerDisableUnlink": "true",
                "framerVariables": "{\"ezTt3ayMo\":\"fill\"}",
                "framerIntrinsicWidth": "24",
                "framerContractVersion": "1",
                "framerSupportedLayoutWidth": "any-prefer-fixed",
                "framerSupportedLayoutHeight": "any-prefer-fixed",
                "framerImmutableVariables": "true"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}